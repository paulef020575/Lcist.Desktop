//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lcist.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class FbQueries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FbQueries() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lcist.Resources.FbQueries", typeof(FbQueries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT * FROM DAYS WHERE UserId = @idUser ORDER BY DateDay.
        /// </summary>
        public static string LoadDays {
            get {
                return ResourceManager.GetString("LoadDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT * FROM matches WHERE player = @idPlayer ORDER BY dateMatch.
        /// </summary>
        public static string LoadMatches {
            get {
                return ResourceManager.GetString("LoadMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT * FROM rithmes Where client = @idUser AND Stage = 2 ORDER BY Id.
        /// </summary>
        public static string LoadPersonalResults {
            get {
                return ResourceManager.GetString("LoadPersonalResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT pl.Id,
        ///        pl.Name,
        ///        pl.Birthday,
        ///        pl.state, COALESCE(pl.cost, 0) AS cost,
        ///        (SELECT COUNT(*) FROM matches m WHERE m.player = pl.Id) as matchCount
        ///FROM playersNet pl WHERE pl.UserId = @idUser ORDER BY pl.Name.
        /// </summary>
        public static string LoadPlayers {
            get {
                return ResourceManager.GetString("LoadPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT *
        ///    FROM inetqueries
        ///    WHERE player = @idPlayer
        ///        AND stage = 2
        ///    ORDER BY dateFor.
        /// </summary>
        public static string LoadQueries {
            get {
                return ResourceManager.GetString("LoadQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT cl.Id, cl.Name, cl.RealName,
        ///    (SELECT COUNT(d.dateday) FROM days d WHERE d.userId = cl.Id) AS daysCount,
        ///    (SELECT COUNT(pl.Id) FROM playersNet pl WHERE pl.userId = cl.Id) AS PlayersCount
        ///FROM CLIENTS cl
        ///group BY cl.Id, cl.Name, cl.RealName.
        /// </summary>
        public static string LoadUsers {
            get {
                return ResourceManager.GetString("LoadUsers", resourceCulture);
            }
        }
    }
}
